datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
}
generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x", "linux-arm64-openssl-1.0.x"]
}

enum EnumMovementsType {
  SALE
  ADD_TO_STOCK
  REMOVE_FROM_STOCK
}

enum EnumPaymentMethodType {
  PIX
  DEBIT
  CREDIT
  CASH
}

model Products {
  id              String    @id @default(uuid())
  name            String
  image           String?
  description     String?
  userId          String
  stockQuantity   Int
  unitPrice       Float
  positionInStock String?
  expirationDate  DateTime?
  createdAt       DateTime  @default(now()) @db.Timestamptz(3)
  deletedAt       DateTime? @db.Timestamptz(3)
  updatedAt       DateTime  @default(now()) @db.Timestamptz(3)

  category         ProductCategories[]
  movements        Movements[]
  productSuppliers ProductSuppliers[]

  @@index([createdAt])
  @@index([userId])
}

model Suppliers {
  id        String    @id @default(uuid())
  name      String
  address   String?
  phone     String?
  email     String?
  userId    String
  createdAt DateTime  @default(now()) @db.Timestamptz(3)
  deletedAt DateTime? @db.Timestamptz(3)
  updatedAt DateTime  @default(now()) @db.Timestamptz(3)

  productSuppliers ProductSuppliers[]

  @@index([createdAt])
  @@index([userId])
}

model Movements {
  id           String            @id @default(uuid())
  movementType EnumMovementsType
  quantity     Int
  productId    String
  productName  String
  userId       String
  createdAt    DateTime          @default(now()) @db.Timestamptz(3)
  deletedAt    DateTime?         @db.Timestamptz(3)
  updatedAt    DateTime          @default(now()) @db.Timestamptz(3)

  product Products @relation(fields: [productId], references: [id])

  @@index([createdAt(sort: Desc)])
  @@index([movementType])
  @@index([userId])
  @@index([productId])
}


model Category {
  id                String              @id @default(uuid())
  name              String
  createdAt         DateTime            @default(now()) @db.Timestamptz(3)
  deletedAt         DateTime?           @db.Timestamptz(3)
  updatedAt         DateTime            @default(now()) @db.Timestamptz(3)
  productCategories ProductCategories[]
}

model ProductCategories {
  productId  String
  categoryId String

  product  Products @relation(fields: [productId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])

  @@id([productId, categoryId])
}

model ProductSuppliers {
  productId  String
  supplierId String

  product  Products  @relation(fields: [productId], references: [id])
  supplier Suppliers @relation(fields: [supplierId], references: [id])

  @@id([productId, supplierId])
}
